version: "3.9"

services:
  client:
    image: nginx:1.19.10-alpine
    ports:
      - 8001:8080
    deploy:
      replicas: 2
      placement:
        max_replicas_per_node: 1
      restart_policy:
        condition: any
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=proxy"

        - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
        - "traefik.http.services.example-static.loadbalancer.server.port=8080" # it seems you always need to give traefik a port so it 'notices' the service

        - "traefik.http.middlewares.example-redirectregex.redirectregex.regex=^https?://www.example.com(?::[0-9]+)?/(.*)"
        - "traefik.http.middlewares.example-redirectregex.redirectregex.replacement=https://example.com/$${1}"
        - "traefik.http.middlewares.example-redirectregex.redirectregex.permanent=true"

        - "traefik.http.routers.example-static.rule=Host(`example.com`) || Host(`www.example.com`)"
        - "traefik.http.routers.example-static.entrypoints=web"
        - "traefik.http.routers.example-static.middlewares=example-redirectregex"

        - "traefik.http.routers.example-static-secured.rule=Host(`example.com`) || Host(`www.example.com`)"
        - "traefik.http.routers.example-static-secured.entrypoints=web-secured"
        - "traefik.http.routers.example-static-secured.tls=true"
        - "traefik.http.routers.example-static-secured.middlewares=example-redirectregex"
    volumes:
      - /var/www/example_com:/app
      - ./nginx/example.conf:/etc/nginx/conf.d/example.conf:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - proxy

networks:
  proxy:
    external: true
